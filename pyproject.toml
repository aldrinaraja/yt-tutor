[project]
name = "yt-tutor"
version = "0.1.0"
description = "AI-powered YouTube video tutor that extracts transcripts and allows Q&A about video content"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "faiss-cpu>=1.12.0",
    "langchain>=0.3.27",
    "langchain-community>=0.3.27",
    "langchain-groq>=0.3.7",
    "langchain-huggingface>=0.3.1",
    "python-dotenv>=1.1.1",
    "pytube>=15.0.0",
    "requests>=2.31.0",
    "sentence-transformers>=5.1.0",
    "streamlit>=1.48.1",
    "youtube-transcript-api>=1.2.2",
]

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]
exclude = [
    "tests/",
    "sample.py",
    ".git/",
    ".cache/",
    "transcript.txt",
    "*.pyc",
    "__pycache__/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "sample.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
